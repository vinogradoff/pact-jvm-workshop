plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

// needed to avoid conflicts with spring junit5 dependencies
ext['junit-jupiter.version'] = '5.4.2'

bootJar {
    archiveBaseName = 'weather-rest-service'
    archiveVersion =  '1.0.0'
}


repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // add dependencies on junit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
    // assertions library
    testImplementation "org.assertj:assertj-core:3.12.2"
    // library for api tests
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    // pact provider for junit5
    testImplementation "au.com.dius:pact-jvm-provider-junit5_2.12:3.6.5"

}


/*

Task

configure versioning as <project.version>-<git_commit_hash>
use it in publishing result to broker

*/



























project.version="0.1.0"

def getGitHashForLastCommit = { ->

    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

test {
    useJUnitPlatform()   // configure JUnit5

    // to be set if you want the verification results published on broker
    systemProperty "pact.verifier.publishResults",true

    systemProperty "pactbroker.auth.username",pactBrokerUser
    systemProperty "pactbroker.auth.password",pactBrokerPwd

    systemProperty "pact.provider.version","${project.version}-${getGitHashForLastCommit()}"
}